type Recipe {
  _id: ID!
  id: ID!
  author: User!
  title: String!
  img: String!
  created: String!
  description: String!
  ingredients: [String]!
  steps: [String]!
  tags: [String]!
}

type User {
  _id: ID!
  name: String!
  email: String
  password: String
  avatar: String!
  posts: [Recipe]!
  stars: [Recipe]
}

type Query {
  about: String!
  recipeList(tagfilter: [String]): [Recipe]!
  "DELETED! userList: [User]!"
  recipeInfo(id: ID!): Recipe
  "DELETED mypost: [Recipe]!"
  me: User!
}

type Mutation {
  setAboutMessage(message: String!): String
  createUser(user: UserInputs!): User!
  createRecipe(recipe: RecipeInputs!): Recipe!
  deleteRecipe(id: ID!): Boolean!
  updateRecipe(id: ID!, changes: UpdateRecipeInput!): Recipe!
  updateAvatar(img: String!): Boolean!
}

input RecipeInputs {
  title: String!
  img: String!
  description: String
  ingredients: [String]
  steps: [String]
  tags: [String]
}

input UserInputs {
  name: String!
  email: String!
  password: String!
}

input UpdateRecipeInput {
  title: String
  img: String
  description: String
  ingredients: [String]
  steps: [String]
  tags: [String]
}